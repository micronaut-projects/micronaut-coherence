/*
 * Copyright 2017-2021 original authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "io.micronaut.build.internal:micronaut-gradle-plugins:4.0.1"
    }
}

subprojects { Project subproject ->
    group "io.micronaut.coherence"

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
            mavenContent {
                snapshotsOnly()
            }
        }
        maven { url "https://oss.sonatype.org/content/groups/staging" }
    }

    if (subproject.name.endsWith('-bom')) {
        apply plugin: "java-platform"
        version projectVersion

    } else {
        apply plugin: "io.micronaut.build.internal.common"

        dependencies {
            annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
            annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"

            if(!subproject.name.endsWith('-processor')) {
                compileOnly(platform("com.oracle.coherence.ce:coherence-bom:${coherenceVersion}"))
                testImplementation(platform("com.oracle.coherence.ce:coherence-bom:${coherenceVersion}"))
            }

            testAnnotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
        }
    }

    apply plugin: "io.micronaut.build.internal.dependency-updates"
    apply plugin: "io.micronaut.build.internal.publishing"
}

apply plugin: "io.micronaut.build.internal.docs"
apply plugin: "io.micronaut.build.internal.dependency-updates"
