plugins {
    id "io.micronaut.build.internal.coherence-module"
}

dependencies {
    api(mn.micronaut.inject)
    api(mn.micronaut.messaging)
    api(mn.micronaut.runtime)
    implementation(mnReactor.micronaut.reactor)

    implementation 'io.grpc:grpc-all:1.56.0'

    compileOnly(libs.managed.coherence)
    compileOnly(libs.managed.coherence.json)
    compileOnly(libs.managed.coherence.grpc.proxy) {
      exclude group: 'io.helidon.grpc', module: "io.grpc"
    }

    testAnnotationProcessor(mn.micronaut.inject.java)

    testImplementation(libs.managed.coherence)

    testImplementation(libs.mockito.core)
    testImplementation(libs.hamcrest)
    testImplementation(mnTest.micronaut.test.junit5)

    testImplementation(libs.bedrock.testing.support)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testRuntimeOnly(mn.snakeyaml)
}

tasks.withType(Test) {
    useJUnitPlatform()
}

test {
    systemProperty("java.net.preferIPv4Stack", "true")
    forkEvery 1
}
